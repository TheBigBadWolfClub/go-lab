version: '3.9'

services:

  api:
    build:
      context: ../
      dockerfile: dockers/local.Dockerfile
    container_name: test-api
    working_dir: /go/bin/test-api
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.version=0.1.1,service.name=dice-roller
      - OTEL_COLLECTOR_ENDPOINT=${OTEL_COLLECTOR_ENDPOINT}
    ports:
      - "8091:8091"
    volumes:
      - "../:/go/bin/test-api"
    command: go run main.go
    depends_on:
      - otel-collector
    env_file:
      - .env


  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib # COLLECTOR_CONTRIB_IMAGE
    container_name: otel-collector
    restart: unless-stopped
    #command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the Collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
      - "8006:8006"     # fluentdforward
      - "8006:8006/udp" # fluentforward
    environment:
      - NEW_RELIC_API_KEY=${NEW_RELIC_API_KEY}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - LOG_EXPORTER_LOG_VERBOSITY=detailed
    env_file:
      - .env
    command: [ "--config=/otelcol-config.yml", "${OTELCOL_ARGS}" ]
    volumes:
      - ./otelcol-config.yml:/otelcol-config.yml
      - ./otelcol-config-extras.yml:/otelcol-config-extras.yml

